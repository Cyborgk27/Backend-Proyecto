// <auto-generated />
using System;
using Distribuidora_MC_DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Distribuidora_MC_DB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240117031157_make_relations")]
    partial class make_relations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoriaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.InformacionProducto", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoId");

                    b.ToTable("informacionProductos");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Precio", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<float>("PrecioCredito")
                        .HasColumnType("REAL");

                    b.Property<float>("PrecioEfectivo")
                        .HasColumnType("REAL");

                    b.Property<float>("PrecioUnidad")
                        .HasColumnType("REAL");

                    b.HasKey("ProductoId");

                    b.ToTable("Precios");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Disponible")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Proveedor", b =>
                {
                    b.Property<int>("Ruc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailProveedor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonoProveedor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Ruc");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.InformacionProducto", b =>
                {
                    b.HasOne("Distribuidora_MC_DB.Models.Producto", "Producto")
                        .WithOne("InformacionProducto")
                        .HasForeignKey("Distribuidora_MC_DB.Models.InformacionProducto", "ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Precio", b =>
                {
                    b.HasOne("Distribuidora_MC_DB.Models.Producto", "Producto")
                        .WithOne("Precio")
                        .HasForeignKey("Distribuidora_MC_DB.Models.Precio", "ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Producto", b =>
                {
                    b.HasOne("Distribuidora_MC_DB.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Distribuidora_MC_DB.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Categoria");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Producto", b =>
                {
                    b.Navigation("InformacionProducto")
                        .IsRequired();

                    b.Navigation("Precio")
                        .IsRequired();
                });

            modelBuilder.Entity("Distribuidora_MC_DB.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
